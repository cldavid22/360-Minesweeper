import org.junit.jupiter.api.Test;

import java.util.Random;

import static org.junit.jupiter.api.Assertions.*;

class MineSweeperTest {
    @Test
    public void testOneBomb() {
        char[][] t = {{'*'}};

        char[][] b = MineSweeper.findHints(t);

        assertArrayEquals(t, b);
    }

    @Test
    public void testOneDot() {
        char[][] t = {{'.'}};
        char[][] c = {{'0'}};

        char[][] b = MineSweeper.findHints(t);

        assertArrayEquals(c, b);
    }
    @Test
    public void testOneRowDots() {
        char[][] t = {{'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.'}};
        char[][] c = {{'0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'}};

        char[][] b = MineSweeper.findHints(t);

        assertArrayEquals(c, b);
    }
    @Test
    public void testOneRowBombs() {
        char[][] t = {{'*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*'}};
        char[][] c = {{'*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*'}};
        char[][] b = MineSweeper.findHints(t);

        assertArrayEquals(c, b);
    }
    @Test
    public void test100100Bombs() {
        char[][] minsweeper = new char[100][100];

        for (int i = 0; i < 100; i++) {
            for (int j = 0; j < 100; j++) {
                Random random = new Random();
                int randomNumber = random.nextInt(100);
                if(randomNumber<=100){
                    minsweeper[i][j]='*';
                } else{
                    minsweeper[i][j]='.';
                }
            }

        }

        char[][] b = MineSweeper.findHints(minsweeper);

        assertArrayEquals(minsweeper, b);
    }

}